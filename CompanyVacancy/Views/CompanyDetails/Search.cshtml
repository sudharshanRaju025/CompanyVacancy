@model List<CompanyVacancy.Models.CompanyDetails>
@using System.Text.RegularExpressions
<link href="~/css/site.css" rel="stylesheet" type="text/css" />


@functions {
    public string Highlight(string text, string searchTerm)
    {
        if (string.IsNullOrEmpty(text) || string.IsNullOrEmpty(searchTerm)) return text;
        return Regex.Replace(
            text,
            Regex.Escape(searchTerm),
            match => $"<mark>{match.Value}</mark>",
            RegexOptions.IgnoreCase
        );
    }
}
<div class="container mb-4">
    <form method="get" class="input-group">
        <input type="text" style="text-decoration-color:black" name="query" class="form-control me-2 rounded-pill shadow-sm " placeholder="Search company..." autocomplete="off" value="@ViewBag.Query" />
        <button type="submit" class="btn btn-light bg-info text-black rounded-pill px-4 shadow-sm">Search</button>
    </form>
</div>


<div class="container">
    @if (Model != null && Model.Any())
    {
        <div class="table-responsive shadow-sm rounded-3">
            <table class="table table-bordered table-striped align-middle shadow bg-transparent  " style="background-color:#00A2E5;box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
               border-top-left-radius: 10px;border-top-right-radius: 10px; ">
                 
                <thead class="table-info">
                    <tr>
                        @* <th style="font-size:17px">Id</th> *@
                        <th style="font-size:17px;border: 1px solid black;background-color:#00A2E5">Company Name</th>
                        <th style="font-size:17px;border: 1px solid black;background-color:#00A2E5">Vacancies</th>
                        <th style="font-size:17px;border: 1px solid black;background-color:#00A2E5">Job Roles</th>
                        <th style="font-size:17px;border: 1px solid black;background-color:#00A2E5">Need Factor</th>
                        <th style="font-size:17px;border: 1px solid black;background-color:#00A2E5">Vacancy Factor</th>
                        <th style="font-size:17px;border: 1px solid black;background-color:#00A2E5">Location</th>
                        <th style="font-size:17px;border: 1px solid black;background-color:#00A2E5">Contact</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var company in Model)
                    {
                        <tr>
                            @* <td>@company.Id</td> *@
                            <td style="font-size:15px;background-color: rgba(255, 255, 255, 0.6);border: 1px solid black;">@Html.Raw(Highlight(company.Name, ViewBag.Query as string))</td>
                            <td style="font-size:15px;background-color:rgba(255, 255, 255, 0.6);border: 1px solid black;">@Html.Raw(Highlight(company.Vacancies.ToString(), ViewBag.Query as string))</td>
                            <td style="font-size:15px;background-color:rgba(255, 255, 255, 0.6);border: 1px solid black;">@Html.Raw(Highlight(company.Job_roles, ViewBag.Query as string))</td>
                            <td style="font-size:15px;background-color:rgba(255, 255, 255, 0.6);border: 1px solid black;">@Html.Raw(Highlight(company.Need_Factor.ToString(), ViewBag.Query as string))</td>
                            <td style="font-size:15px;background-color:rgba(255, 255, 255, 0.6);border: 1px solid black;">@Html.Raw(Highlight(company.Vacancy_Factor.ToString(), ViewBag.Query as string))</td>
                            <td style="font-size:15px;background-color:rgba(255, 255, 255, 0.6);border: 1px solid black;">@Html.Raw(Highlight(company.Location, ViewBag.Query as string))</td>
                            <td style="font-size:15px;background-color:rgba(255, 255, 255, 0.6);border: 1px solid black;">@Html.Raw(Highlight(company.Contact, ViewBag.Query as string))</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center mt-4">
            <img style="max-height: 600px;background-size:100%" src="~/images/download.png" alt="No Results"  class="mb-2" />
            
        </div>
    }
</div>

@if (ViewBag.TotalPages > 1)
{
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
    int visiblePages = 7;

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
          
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Search" asp-route-query="@ViewBag.Query" asp-route-page="@(currentPage - 1)">Previous</a>
            </li>

            @{
                int startPage = Math.Max(1, currentPage - visiblePages / 2);
                int endPage = Math.Min(totalPages, startPage + visiblePages - 1);

                if (endPage - startPage < visiblePages - 1)
                {
                    startPage = Math.Max(1, endPage - visiblePages + 1);
                }

                if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Search" asp-route-query="@ViewBag.Query" asp-route-page="1">1</a>
                    </li>
                    if (startPage > 2)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }

                for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" asp-action="Search" asp-route-query="@ViewBag.Query" asp-route-page="@i">@i</a>
                    </li>
                }

                if (endPage < totalPages)
                {
                    if (endPage < totalPages - 1)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                    <li class="page-item">
                        <a class="page-link" asp-action="Search" asp-route-query="@ViewBag.Query" asp-route-page="@totalPages">@totalPages</a>
                    </li>
                }
            }

           
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Search" asp-route-query="@ViewBag.Query" asp-route-page="@(currentPage + 1)">Next</a>
            </li>
        </ul>
    </nav>
}


